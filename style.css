/* custom variables */

:root{


    /* colors */

    /* ##primary */

    --clr-pr-darkBlue:hsl(273, 85%, 13%);
    --clr-pr-lightGreen:hsl(150, 100%, 63%);
    --clr-pr-darkGray:#584D62;

    /* neutrals */

    --clr-nt-lightGray: hsl(274, 100%, 99%);
    --clr-nt-white: hsl(0, 0%, 100%);

   /* Typography*/

   /* #heading */

   --ff-fraunces: 'Fraunces', serif;

   /* body */

   --ff-manrope: 'Manrope', sans-serif;

    /* font sizes */

    --fs-reg: 18px;
    --fs-sm: 32px
    --fs-md: 56px;
    --fs-lg: 80px;
    --fs-xl: 144px;

    /* font weights */

    --fw-reg: 400;
    --fw-semiBold: 600;


}


/* css reset */

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
    2. Remove default margin
  */
* {
  margin: 0;
}
/*
    Typographic tweaks!
    3. Add accessible line-height
    4. Improve text rendering
  */
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
    5. Improve media defaults
  */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
    6. Remove built-in form typography styles
  */
input,
button,
textarea,
select {
  font: inherit;
}
/*
    7. Avoid text overflows
  */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
    8. Create a root stacking context
  */
#root,
#__next {
  isolation: isolate;
}




/* general styles */

h1, h2, span{
    font-family: var(--ff-fraunces);
}

/* responsive font size that scales between 80px on mobile and 144px on desktop using CSS clamp */

h1 {
    font-size: clamp(50px, 5vw + 2rem, 144px);
    line-height: clamp(60px, 8vw, 80px); /* Adjust the preferred scaling value as needed */
    font-weight: var(--fw-semiBold);
}



p, a{
    font-family: var(--ff-manrope);
    line-height: 2;
    color: var(--clr-pr-darkGray);
}


main, section, footer{
    padding: 1rem;
}

h1>span{
    color: var(--clr-nt-white);
    text-decoration: none; /* Remove default underline */
    position: relative; /* Required for absolute positioning */
}

h1>span::after{
    content: ''; /* Create a pseudo-element for the underline */
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 3px; /* Adjust thickness of the underline */
    background-color: var(--clr-pr-lightGreen); /* Color of the underline */
    display: block;
}


a {
    color: var(--clr-nt-white);
    text-decoration: none; /* Remove default underline */
    position: relative; /* Required for absolute positioning */
  }
  
  a::after {
    content: ''; /* Create a pseudo-element for the underline */
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 3px; /* Adjust thickness of the underline */
    background-color: var(--clr-pr-lightGreen); /* Color of the underline */
    display: block;
  }
  
  a:hover::after {
    height: 2px; /* Example: Increase thickness on hover */
  }
  
  /* Adjust padding to create space between text and underline */
  a {
    padding-bottom: 2px; /* Add padding to create space between text and underline */
  }


header{
    background-color: var(--clr-pr-darkBlue);
    color: var(--clr-nt-white);
    padding: 1rem;

    display: flex;
    flex-direction: column;
    gap: 64px;
}

.top-header{
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.hero-section{
    display: flex;
    flex-direction: column;
    gap: 40px;
}



